module tb3;

reg sel;
reg in0;
reg in1;

wire out;

mux2tol_cond	dut_1(  .sel(sel),
			.in0(in0),
			.in1(in1),
			.out(out1));
mux2tol_if	dut_2(  .sel(sel),
			.in0(in0),
			.in1(in1),
			.out(out2));
mux2tol_case	dut_3(  .sel(sel),
			.in0(in0),
			.in1(in1),
			.out(out3));

//simulus

initial begin
	$display("first is '?'");
	$display("second is 'if'");
	$display("third is 'case'");
	$display("===================================");
	$display(" sel  in0   in1   out  ");
	$display("===================================");
	#(50)	{sel, in0, in1} = 3'b_000; #(50) $display(" %b\t%b\t%b\t%b\t%b\t%b", sel, in0, in1, out1, out2, out3);
	#(50)	{sel, in0, in1} = 3'b_001; #(50) $display(" %b\t%b\t%b\t%b\t%b\t%b", sel, in0, in1, out1, out2, out3);
	#(50)	{sel, in0, in1} = 3'b_010; #(50) $display(" %b\t%b\t%b\t%b\t%b\t%b", sel, in0, in1, out1, out2, out3);
	#(50)	{sel, in0, in1} = 3'b_011; #(50) $display(" %b\t%b\t%b\t%b\t%b\t%b", sel, in0, in1, out1, out2, out3);
	#(50)	{sel, in0, in1} = 3'b_100; #(50) $display(" %b\t%b\t%b\t%b\t%b\t%b", sel, in0, in1, out1, out2, out3);
	#(50)	{sel, in0, in1} = 3'b_101; #(50) $display(" %b\t%b\t%b\t%b\t%b\t%b", sel, in0, in1, out1, out2, out3);
	#(50)	{sel, in0, in1} = 3'b_110; #(50) $display(" %b\t%b\t%b\t%b\t%b\t%b", sel, in0, in1, out1, out2, out3);
	#(50)	{sel, in0, in1} = 3'b_111; #(50) $display(" %b\t%b\t%b\t%b\t%b\t%b", sel, in0, in1, out1, out2, out3);
end

endmodule
